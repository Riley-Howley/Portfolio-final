// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portfolio.Data;

#nullable disable

namespace Portfolio.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20220426033308_update#3")]
    partial class update3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Portfolio.Models.About", b =>
                {
                    b.Property<int>("AboutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AboutId");

                    b.ToTable("About");
                });

            modelBuilder.Entity("Portfolio.Models.Experience", b =>
                {
                    b.Property<int>("ExperienceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Dates")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsPosLeft")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LogoImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteURl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ExperienceID");

                    b.ToTable("Experience");
                });

            modelBuilder.Entity("Portfolio.Models.Projects", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BackgroundImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceCompatable")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GitHubLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProjectID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Portfolio.Models.Services", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BackgroundImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Icon1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Icon2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Icon3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ServicesDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ServicesTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ServiceID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Portfolio.Models.SoftSkills", b =>
                {
                    b.Property<int>("SoftSkillsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SoftSkillTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SoftSkillpercentage")
                        .HasColumnType("int");

                    b.HasKey("SoftSkillsID");

                    b.ToTable("SoftSkills");
                });

            modelBuilder.Entity("Portfolio.Models.TechnicalSkills", b =>
                {
                    b.Property<int>("TechnicalSkillsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TechnicalSkillPercentage")
                        .HasColumnType("int");

                    b.Property<string>("TechnicalSkillTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TechnicalSkillsID");

                    b.ToTable("TechnicalSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
